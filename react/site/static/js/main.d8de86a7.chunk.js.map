{"version":3,"sources":["index.js"],"names":["Exam","props","examQuestions","require","slice","start","end","examHistory","getExamHistory","state","graded","history","questions","currentQuestionNumber","currentQuestion","console","log","length","JSON","stringify","currentIndex","this","setState","questionNumber","exams","push","localStorage","setItem","object","getItem","name","parse","clear","index","question","flag","options","selected","class","id","query","getCorrectCount","type","value","defaultChecked","onClick","toggleOption","Math","random","for","text","previousQuestion","nextQuestion","gradeTheExam","clearLocalStorage","React","Component","ReactDOM","render","document","getElementById"],"mappings":"s9pCAKMA,E,kDAEJ,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GACT,IACIC,EADgBC,EAAQ,IACMC,MAAM,EAAKH,MAAMI,MAAO,EAAKJ,MAAMK,KAEjEC,EAAc,EAAKC,iBALH,OAMjB,EAAKC,MAAQ,CACXC,QAAQ,EACXL,MAAO,EAAKJ,MAAMI,MAClBC,IAAK,EAAKL,MAAMK,IAChBK,QAASJ,EACTK,UAAWV,EACXW,sBAAuB,EACvBC,gBAAiBZ,EAAc,IAEjCa,QAAQC,IAAI,wBAA0B,EAAKP,MAAMG,UAAUK,QAC3DF,QAAQC,IAAI,8BAAgCE,KAAKC,UAAU,EAAKV,MAAME,UAhBlD,E,gDAoBpB,WACC,IAAIS,EAAeC,KAAKZ,MAAMI,sBAC9BQ,KAAKC,SAAS,CAACT,sBAAuBO,EAAe,IACrDC,KAAKC,SAAS,CAACR,gBAAiBO,KAAKZ,MAAMG,UAAUQ,EAAe,O,8BAGrE,WACC,IAAIA,EAAeC,KAAKZ,MAAMI,sBAC9BQ,KAAKC,SAAS,CAACT,sBAAuBO,EAAe,IACrDC,KAAKC,SAAS,CAACR,gBAAiBO,KAAKZ,MAAMG,UAAUQ,EAAa,O,yBAGnE,SAAYG,GACXF,KAAKC,SAAS,CAACT,sBAAuBU,IACtCF,KAAKC,SAAS,CAACR,gBAAiBO,KAAKZ,MAAMG,UAAUW,O,0BAGtD,WACC,IAAIhB,EAAcc,KAAKb,iBAIvB,OAHAD,EAAYiB,MAAMC,KAAKJ,KAAKZ,MAAMG,WAClCS,KAAKC,SAAS,CAACX,QAASJ,IACxBmB,aAAaC,QAAQ,cAAeT,KAAKC,UAAUZ,IAC5C,Q,4BAGR,WACC,IAAIqB,EAASF,aAAaG,QAAQ,eAC9BtB,EAAc,GAElB,GAAc,MAAVqB,EAAgB,EACnBrB,EAAc,CAACuB,KAAK,iBAERN,MADA,GAEZE,aAAaC,QAAQ,cAAeT,KAAKC,UAAUZ,IACnDc,KAAKC,SAAS,CAACX,QAASJ,SAExBA,EAAcW,KAAKa,MAAMH,GAE1B,OAAOrB,I,6BAGR,WACC,MAAO,Q,+BAGR,WACCmB,aAAaM,MAAM,eACnBX,KAAKC,SAAS,CAACX,QAASU,KAAKb,qB,0BAG9B,SAAayB,GACZ,IAAIC,EAAWb,KAAKZ,MAAMK,gBACtBZ,EAAgBmB,KAAKZ,MAAMG,UAC3BuB,EAAOD,EAASE,QAAQH,GAAOI,SACnCH,EAASE,QAAQH,GAAOI,UAAYF,EACpCjC,EAAcmB,KAAKZ,MAAMI,uBAAyBqB,EAClDb,KAAKC,SAAS,CAACR,gBAAiBoB,IAChCb,KAAKC,SAAS,CAACV,UAAWV,M,oBAI1B,WAAU,IAAD,OACP,OAGJ,sBAAKoC,MAAM,YAAX,UACG,sBAAKA,MAAM,OAAX,UACG,sBAAKA,MAAM,cAAcC,GAAG,iBAA5B,sBACOlB,KAAKZ,MAAMI,sBAAwB,KAE1C,sBAAKyB,MAAM,YAAX,UACG,qBAAIA,MAAM,aAAaC,GAAG,QAA1B,UACNlB,KAAKZ,MAAMK,gBAAgB0B,MADrB,WAEEnB,KAAKoB,kBAFP,OAIA,sBAAKH,MAAM,kBAAkBC,GAAG,kBAAhC,UACG,uBAAOD,MAAM,iCAAiCI,KAAK,WAAWZ,KAAK,eAAeS,GAAG,UAAUI,MAAM,UAC9GC,eAAgBvB,KAAKZ,MAAMK,gBAAgBsB,QAAQ,GAAGC,SACtDQ,QAAS,kBAAM,EAAKC,aAAa,KAASC,KAAKC,UAEtC,uBAAOV,MAAM,mBAAmBW,IAAI,UAAUV,GAAG,eAAjD,SACRlB,KAAKZ,MAAMK,gBAAgBsB,QAAQ,GAAGc,UAGjC,sBAAKZ,MAAM,kBAAkBC,GAAG,kBAAhC,UACG,uBAAOD,MAAM,iCAAiCI,KAAK,WAAWZ,KAAK,eAAeS,GAAG,UAAUI,MAAM,UAC9GC,eAAgBvB,KAAKZ,MAAMK,gBAAgBsB,QAAQ,GAAGC,SACtDQ,QAAS,kBAAM,EAAKC,aAAa,KAASC,KAAKC,UAEtC,uBAAOV,MAAM,mBAAmBW,IAAI,UAAUV,GAAG,eAAjD,SACRlB,KAAKZ,MAAMK,gBAAgBsB,QAAQ,GAAGc,UAGjC,sBAAKZ,MAAM,kBAAkBC,GAAG,kBAAhC,UACG,uBAAOD,MAAM,iCAAiCI,KAAK,WAAWZ,KAAK,eAAeS,GAAG,UAAUI,MAAM,UAC9GC,eAAgBvB,KAAKZ,MAAMK,gBAAgBsB,QAAQ,GAAGC,SACtDQ,QAAS,kBAAM,EAAKC,aAAa,KAASC,KAAKC,UAEtC,uBAAOV,MAAM,mBAAmBW,IAAI,UAAUV,GAAG,eAAjD,SACRlB,KAAKZ,MAAMK,gBAAgBsB,QAAQ,GAAGc,UAIjC,sBAAKZ,MAAM,kBAAkBC,GAAG,kBAAhC,UACG,uBAAOD,MAAM,iCAAiCI,KAAK,WAAWZ,KAAK,eAAeS,GAAG,UAAUI,MAAM,UAC9GC,eAAgBvB,KAAKZ,MAAMK,gBAAgBsB,QAAQ,GAAGC,SACtDQ,QAAS,kBAAM,EAAKC,aAAa,KAASC,KAAKC,UAEtC,uBAAOV,MAAM,mBAAmBW,IAAI,UAAUV,GAAG,eAAjD,SACRlB,KAAKZ,MAAMK,gBAAgBsB,QAAQ,GAAGc,UAGjC,gCACG,oBAAGZ,MAAM,iBAAT,UACG,mBAAGC,GAAG,WAAWD,MAAM,0BAChCO,QAAS,kBAAM,EAAKM,oBADX,yBAGA,mBAAGZ,GAAG,OAAOD,MAAM,0BAC5BO,QAAS,kBAAM,EAAKO,gBADX,qBAGA,mBAAGb,GAAG,SAASD,MAAM,kBAC9BO,QAAS,kBAAM,EAAKQ,gBADX,uBAIH,iCAIT,sBAAKf,MAAM,YAAX,UACG,qBAAKA,MAAM,cAAcC,GAAG,sBAA5B,6BAGA,sBAAKD,MAAM,YAAX,UACG,oBAAIA,MAAM,aAAaC,GAAG,0BAA1B,gCACA,mBAAGD,MAAM,oBAIf,sBAAKA,MAAM,YAAX,UACG,qBAAKA,MAAM,cAAcC,GAAG,oBAA5B,4BAGA,sBAAKD,MAAM,YAAX,UACG,oBAAIA,MAAM,aAAaC,GAAG,wBAA1B,gCACN,kEAAqClB,KAAKZ,MAAME,QAAQa,MAAMP,OAA9D,OACA,mBAAGsB,GAAG,UAAUD,MAAM,kBACnBO,QAAS,kBAAM,EAAKS,qBADvB,iCAGA,8BAAK,oCAA4BpC,KAAKC,UAAUE,KAAKZ,MAAME,QAAS,GAAI,MAAnE,MAAUoC,KAAKC,YACd,mBAAGV,MAAM,2B,GA3KCiB,IAAMC,WAwLzBC,IAASC,OACP,cAAC1D,EAAD,CAAMK,MAAM,KAAKC,IAAI,OACrBqD,SAASC,eAAe,W","file":"static/js/main.d8de86a7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass Exam extends React.Component {\n\t\n  constructor(props) {\n    super(props);\n\tlet jsonQuestions = require('./questions.json');\n\tlet examQuestions = jsonQuestions.slice(this.props.start, this.props.end);\n\t\n\tlet examHistory = this.getExamHistory();\n    this.state = {\n      graded: false,\n\t  start: this.props.start,\n\t  end: this.props.end,\n\t  history: examHistory,\n\t  questions: examQuestions,\n\t  currentQuestionNumber: 0,\n\t  currentQuestion: examQuestions[0]\n    };\n\tconsole.log(\"Number of Questions: \" + this.state.questions.length);\n\tconsole.log(\"Here is the history state: \" + JSON.stringify(this.state.history));\n\t\n  }\n  \n\tnextQuestion() {\n\t\tlet currentIndex = this.state.currentQuestionNumber;\n\t\tthis.setState({currentQuestionNumber: currentIndex + 1});\n\t\tthis.setState({currentQuestion: this.state.questions[currentIndex + 1]});\n\t}\n\t\n\tpreviousQuestion() {\n\t\tlet currentIndex = this.state.currentQuestionNumber;\n\t\tthis.setState({currentQuestionNumber: currentIndex - 1});\n\t\tthis.setState({currentQuestion: this.state.questions[currentIndex-1]});\n\t}\n\t\n\tgetQuestion(questionNumber) {\n\t\tthis.setState({currentQuestionNumber: questionNumber});\n\t\tthis.setState({currentQuestion: this.state.questions[questionNumber]});\n\t}\n\t\n\tgradeTheExam() {\n\t\tlet examHistory = this.getExamHistory();\n\t\texamHistory.exams.push(this.state.questions);\n\t\tthis.setState({history: examHistory})\n\t\tlocalStorage.setItem('examHistory', JSON.stringify(examHistory));\n\t\treturn \"999\";\n\t}\n\t\n\tgetExamHistory() {\n\t\tlet object = localStorage.getItem('examHistory');\n\t\tlet examHistory = \"\";\n\t\t\n\t\tif (object == null) {\n\t\t\texamHistory = {name:\"Exam History\"};\n\t\t\tlet exams = [];\n\t\t\texamHistory.exams = exams;\n\t\t\tlocalStorage.setItem('examHistory', JSON.stringify(examHistory));\n\t\t\tthis.setState({history: examHistory})\n\t\t} else {\n\t\t\texamHistory = JSON.parse(object);\n\t\t}\n\t\treturn examHistory;\n\t}\n\t\n\tgetCorrectCount() {\n\t\treturn \"999\";\n\t}\n\n\tclearLocalStorage() {\n\t\tlocalStorage.clear('examHistory');\n\t\tthis.setState({history: this.getExamHistory()});\n\t}\n\t\n\ttoggleOption(index) {\n\t\tlet question = this.state.currentQuestion;\n\t\tlet examQuestions = this.state.questions;\n\t\tlet flag = question.options[index].selected;\n\t\tquestion.options[index].selected = !flag;\t\t\n\t\texamQuestions[this.state.currentQuestionNumber] = question;\n\t\tthis.setState({currentQuestion: question});\n\t\tthis.setState({questions: examQuestions});\n\t}\n\t\t\n  \n  render() { \n    return (\n\n\n<div class=\"container\">\n   <div class=\"card\">\n      <div class=\"card-header\" id=\"questionNumber\">\n\t  Question {this.state.currentQuestionNumber + 1}\n\t  </div>\n      <div class=\"card-body\">\n         <h3 class=\"card-title\" id=\"query\"> \n  {this.state.currentQuestion.query} \n  (choose {this.getCorrectCount()})\n\t\t </h3>\n         <div class=\"form-check my-2\" id=\"outerOptionDiv0\">\n            <input class=\"form-check-input  option-radio\" type=\"checkbox\" name=\"optionRadios\" id=\"option0\" value=\"option0\"\n\t\t\tdefaultChecked={this.state.currentQuestion.options[0].selected} \n\t\t\tonClick={() => this.toggleOption(0)} key={Math.random()}\n\t\t\t></input>\n            <label class=\"form-check-label\" for=\"option0\" id=\"labelOption0\">\n\t\t\t{this.state.currentQuestion.options[0].text} \n\t\t\t</label>\n         </div>\n         <div class=\"form-check my-2\" id=\"outerOptionDiv1\">\n            <input class=\"form-check-input  option-radio\" type=\"checkbox\" name=\"optionRadios\" id=\"option1\" value=\"option1\"\n\t\t\tdefaultChecked={this.state.currentQuestion.options[1].selected} \n\t\t\tonClick={() => this.toggleOption(1)} key={Math.random()}\n\t\t\t></input>\n            <label class=\"form-check-label\" for=\"option1\" id=\"labelOption1\">\n\t\t\t{this.state.currentQuestion.options[1].text} \n\t\t\t</label>\n         </div>\n         <div class=\"form-check my-2\" id=\"outerOptionDiv2\">\n            <input class=\"form-check-input  option-radio\" type=\"checkbox\" name=\"optionRadios\" id=\"option2\" value=\"option2\"\n\t\t\tdefaultChecked={this.state.currentQuestion.options[2].selected} \n\t\t\tonClick={() => this.toggleOption(2)} key={Math.random()}\n\t\t\t></input>\n            <label class=\"form-check-label\" for=\"option2\" id=\"labelOption2\">\n\t\t\t{this.state.currentQuestion.options[2].text} \n\t\t\t</label>\n         </div>\n\t\t \n         <div class=\"form-check my-2\" id=\"outerOptionDiv3\">\n            <input class=\"form-check-input  option-radio\" type=\"checkbox\" name=\"optionRadios\" id=\"option3\" value=\"option3\"\n\t\t\tdefaultChecked={this.state.currentQuestion.options[3].selected} \n\t\t\tonClick={() => this.toggleOption(3)} key={Math.random()}\n\t\t\t></input>\n            <label class=\"form-check-label\" for=\"option3\" id=\"labelOption3\">\n\t\t\t{this.state.currentQuestion.options[3].text} \n\t\t\t</label>\n         </div>\n         <div>\n            <p class=\"card-text mt-3\">\n               <a id=\"previous\" class=\"enabled btn btn-primary\"\n\t\t\t   onClick={() => this.previousQuestion()}\n\t\t\t   >&lt;&lt; Previous</a>\n               <a id=\"next\" class=\"enabled btn btn-primary\" \n\t\t\t   onClick={() => this.nextQuestion()}\n\t\t\t   >Next &gt;&gt;</a> \n               <a id=\"finish\" class=\"btn btn-primary\"\n\t\t\t   onClick={() => this.gradeTheExam()}\n\t\t\t   >Finish</a>\n            </p>\n            <div></div>\n         </div>\n      </div>\n   </div>\n   <div class=\"card mt-2\">\n      <div class=\"card-header\" id=\"questionJumperTitle\">\n         Question Jumper\n      </div>\n      <div class=\"card-body\">\n         <h3 class=\"card-title\" id=\"questionJumperCardTitle\">Feature Incomplete</h3>\n         <p class=\"card-text\"></p>\n      </div>\n   </div>\n   \n   <div class=\"card mt-2\">\n      <div class=\"card-header\" id=\"localStorageTitle\">\n         Local Storagee\n      </div>\n      <div class=\"card-body\">\n         <h3 class=\"card-title\" id=\"localStorageCardTitle\">What's in Storage?</h3>\n\t\t <p>Number of exams in your history: {this.state.history.exams.length} </p>\n\t\t <a id=\"clearls\" class=\"btn btn-primary\"\n\t\t\t   onClick={() => this.clearLocalStorage()}\n\t\t\t   >Clear Local Storage</a>\n\t\t <div><pre key={Math.random()}> { JSON.stringify(this.state.history, \"\", \"\\t\") } </pre></div>\n         <p class=\"card-text\">\n\t\t </p>\n      </div>\n   </div>\n</div>\n\n\n\n\n    );\n  }\n}\n\nReactDOM.render(\n  <Exam start=\"10\" end=\"13\"/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}